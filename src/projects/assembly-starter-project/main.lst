


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Your Names
    3 00000000         ; Date Created: 8/25/2013 
    4 00000000         ; Last Modified: 8/25/2013 
    5 00000000         ; Section 1-2pm     TA: Saugata Bhattacharyya
    6 00000000         ; Lab number: 1
    7 00000000         ; Brief description of the program
    8 00000000         ; The overall objective of this system is a digital lock
                       
    9 00000000         ; Hardware connections
   10 00000000         ;  PE3 is switch input  (1 means switch is not pressed, 
                       0 means switch is pressed)
   11 00000000         ;  PE4 is switch input  (1 means switch is not pressed, 
                       0 means switch is pressed)
   12 00000000         ;  PE2 is LED output (0 means door is locked, 1 means do
                       or is unlocked) 
   13 00000000         ; The specific operation of this system is to 
   14 00000000         ;   unlock if both switches are pressed
   15 00000000         
   16 00000000         ;#include "TExaS.h"
   17 00000000         ;#define GPIO_PORTF_DATA_R       (*((volatile unsigned l
                       ong *)0x400253FC))
   18 00000000         ;#define GPIO_PORTF_DIR_R        (*((volatile unsigned l
                       ong *)0x40025400))
   19 00000000         ;#define GPIO_PORTF_AFSEL_R      (*((volatile unsigned l
                       ong *)0x40025420))
   20 00000000         ;#define GPIO_PORTF_PUR_R        (*((volatile unsigned l
                       ong *)0x40025510))
   21 00000000         ;#define GPIO_PORTF_DEN_R        (*((volatile unsigned l
                       ong *)0x4002551C))
   22 00000000         ;#define GPIO_PORTF_LOCK_R       (*((volatile unsigned l
                       ong *)0x40025520))
   23 00000000         ;#define GPIO_PORTF_CR_R         (*((volatile unsigned l
                       ong *)0x40025524))
   24 00000000         ;#define GPIO_PORTF_AMSEL_R      (*((volatile unsigned l
                       ong *)0x40025528))
   25 00000000         ;#define GPIO_PORTF_PCTL_R       (*((volatile unsigned l
                       ong *)0x4002552C))
   26 00000000         ;#define SYSCTL_RCGC2_R          (*((volatile unsigned l
                       ong *)0x400FE108))
   27 00000000         
   28 00000000         ;void PortF_Init(void);
   29 00000000         
   30 00000000         ;int main(void){    
   31 00000000         ;PortF_Init();        // Call initialization of port PF4
                        PF2    
   32 00000000         ;while(1){
   33 00000000         ;GPIO_PORTF_DATA_R = 0x0E; // LED is white 00001110
   34 00000000         ;}
   35 00000000         ;}
   36 00000000         ;void PortF_Init(void){
   37 00000000         ;SYSCTL_RCGC2_R |= 0x00000020;     // 1) F clock
   38 00000000         ;GPIO_PORTF_LOCK_R = 0x4C4F434B;   // 2) unlock PortF PF
                       0  
   39 00000000         ;GPIO_PORTF_CR_R = 0x1F;           // allow changes to P
                       F4-0       
   40 00000000         ;GPIO_PORTF_AMSEL_R = 0x00;        // 3) disable analog 
                       function
   41 00000000         ;GPIO_PORTF_PCTL_R = 0x00000000;   // 4) GPIO clear bit 



ARM Macro Assembler    Page 2 


                       PCTL  
   42 00000000         ;GPIO_PORTF_DIR_R = 0x0E;          // 5) PF4,PF0 input, 
                       PF3,PF2,PF1 output   
   43 00000000         ;GPIO_PORTF_AFSEL_R = 0x00;        // 6) no alternate fu
                       nction
   44 00000000         ;GPIO_PORTF_PUR_R = 0x11;          // enable pullup resi
                       stors on PF4,PF0       
   45 00000000         ;GPIO_PORTF_DEN_R = 0x1F;          // 7) enable digital 
                       pins PF4-PF0        
   46 00000000         ;}
   47 00000000         ;// Color    LED(s) PortF
   48 00000000         ;// dark     ---    0
   49 00000000         ;// red      R--    0x02
   50 00000000         ;// blue     --B    0x04
   51 00000000         ;// green    -G-    0x08
   52 00000000         ;// yellow   RG-    0x0A
   53 00000000         ;// sky blue -GB    0x0C
   54 00000000         ;// white    RGB    0x0E
   55 00000000         ;// pink     R-B    0x06
   56 00000000         
   57 00000000         ; PF3-PF1 are outputs to LED3 to LED1 using positive log
                       ic
   58 00000000         
   59 00000000 40025038 
                       LEDS    EQU              0x40025038
   60 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   61 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   62 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   63 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   64 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   65 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   66 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   67 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   68 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   69 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   70 00000000         
   71 00000000         
   72 00000000         
   73 00000000                 AREA             |.text|, CODE, ALIGN=2



ARM Macro Assembler    Page 3 


   74 00000000                 THUMB
   75 00000000                 EXPORT           Start
   76 00000000         GPIO_Init
   77 00000000         ; 1. Activate clock for port F
   78 00000000 4916            LDR              R1, =SYSCTL_RCGC2_R ; load addr
                                                            ess of SYSCTL_RCGC2
                                                            _R into R1
   79 00000002 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
   80 00000004 F040 0020       ORR              R0, R0, #0x00000020 
                                                            ; turn bit 5 on
   81 00000008 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
   82 0000000A BF00            NOP                          ; no operation dela
                                                            y
   83 0000000C BF00            NOP                          ; no operation dela
                                                            y
   84 0000000E         
   85 0000000E         ; 2. No need to unlock PD3-1
   86 0000000E         
   87 0000000E         ; allow changes to P3-P1
   88 0000000E         ;LDR R1, =GPIO_PORTF_CR_R   ; load address of GPIO_PORTF
                       _CR_R into R1
   89 0000000E         ;LDR R0, [R1]     ; load contents of R1 into R0
   90 0000000E         ;BIC R0, R0, #0x0000000E  ; clear bits 7-0
   91 0000000E         ;STR R0, [R1]     ; store R0 in Port Register
   92 0000000E         ;ORR R0, R0, #0x0000000E  ; turn bits 3-1 on
   93 0000000E         ;STR R0, [R1]     ; store R0 in Port Register
   94 0000000E         
   95 0000000E         ; 3. Disable analog functionality
   96 0000000E 4914            LDR              R1, =GPIO_PORTF_AMSEL_R ; load 
                                                            address of GPIO_POR
                                                            TF_AMSEL_R into R1
   97 00000010 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
   98 00000012 F020 00FF       BIC              R0, R0, #0xFF ; clear bits PF3-
                                                            PF1
   99 00000016 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
  100 00000018         
  101 00000018         ; 4. Configure as GPIO
  102 00000018 4912            LDR              R1, =GPIO_PORTF_PCTL_R ; load a
                                                            ddress of GPIO_PORT
                                                            F_PCTL_R into R1
  103 0000001A 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
  104 0000001C F020 000E       BIC              R0, R0, #0x0000000E ; clear bit
                                                            s PF3-PF1
  105 00000020 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
  106 00000022         
  107 00000022         ; 5. Set direction register
  108 00000022 4911            LDR              R1, =GPIO_PORTF_DIR_R ; load ad
                                                            dress of GPIO_PORTF
                                                            _DIR_R into R1
  109 00000024 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
  110 00000026 F040 000E       ORR              R0, R0, #0x0E 
                                                            ; make P3-P1 output



ARM Macro Assembler    Page 4 


                                                            
  111 0000002A 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
  112 0000002C         
  113 0000002C         ; 6. Set regular port function
  114 0000002C 490F            LDR              R1, =GPIO_PORTF_AFSEL_R ; load 
                                                            address of GPIO_POR
                                                            TF_AFSEL_R into R1
  115 0000002E 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
  116 00000030 F020 00FF       BIC              R0, R0, #0xFF ; disable alterna
                                                            te function
  117 00000034 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
  118 00000036         
  119 00000036         ; 7. enable digital port
  120 00000036 490E            LDR              R1, =GPIO_PORTF_DEN_R ; load ad
                                                            dress of GPIO_PORTF
                                                            _DEN_R into R1
  121 00000038 6808            LDR              R0, [R1]    ; load contents of 
                                                            R1 into R0
  122 0000003A F040 000E       ORR              R0, R0, #0x0E ; enable digital 
                                                            I/O on PD3-PD1
  123 0000003E 6008            STR              R0, [R1]    ; store R0 in Port 
                                                            Register
  124 00000040         
  125 00000040 4770            BX               LR          ; return
  126 00000042         
  127 00000042         Start
  128 00000042 F7FF FFDD       BL               GPIO_Init   ; jump to subroutin
                                                            e GPIO_Init
  129 00000046 480B            LDR              R0, =LEDS   ; R0 = LEDS
  130 00000048 F04F 0102       MOV              R1, #2      ; red
  131 0000004C F04F 0204       MOV              R2, #4      ; blue
  132 00000050 F04F 0308       MOV              R3, #8      ; green
  133 00000054 F04F 040D       MOV              R4, #13     ; white
  134 00000058         
  135 00000058         loop
  136 00000058         ;STR R1, [R0]
  137 00000058         ;STR R2, [R0]
  138 00000058 6003            STR              R3, [R0]
  139 0000005A         ;STR R4, [R0]
  140 0000005A E7FD            B                loop
  141 0000005C         
  142 0000005C         
  143 0000005C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  144 0000005C                 END                          ; end of file
              400FE108 
              40025528 
              4002552C 
              40025400 
              40025420 
              4002551C 
              40025038 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Users\Moritz\Keil\ARM\RV31\INC -IC:\Users\Moritz\Keil\ARM\CMSI
S\Include -IC:\Users\Moritz\Keil\ARM\Inc\TI\TM4C123 --predefine="__EVAL SETA 1"



ARM Macro Assembler    Page 5 


 --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 73 in file main.s
   Uses
      None
Comment: .text unused
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 76 in file main.s
   Uses
      At line 128 in file main.s
Comment: GPIO_Init used once
Start 00000042

Symbol: Start
   Definitions
      At line 127 in file main.s
   Uses
      At line 75 in file main.s
Comment: Start used once
loop 00000058

Symbol: loop
   Definitions
      At line 135 in file main.s
   Uses
      At line 140 in file main.s
Comment: loop used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 62 in file main.s
   Uses
      At line 114 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 67 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: GPIO_PORTF_CR_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 64 in file main.s
   Uses
      At line 120 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 61 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: GPIO_PORTF_LOCK_R unused
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 68 in file main.s
   Uses
      At line 102 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 63 in file main.s
   Uses
      None
Comment: GPIO_PORTF_PUR_R unused
LEDS 40025038

Symbol: LEDS
   Definitions
      At line 59 in file main.s
   Uses
      At line 129 in file main.s
Comment: LEDS used once
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 69 in file main.s
   Uses
      At line 78 in file main.s
Comment: SYSCTL_RCGC2_R used once
11 symbols
348 symbols in table
